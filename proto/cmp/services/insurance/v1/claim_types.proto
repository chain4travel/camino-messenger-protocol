syntax = "proto3";

package cmp.services.insurance.v1;

import "cmp/services/insurance/v1/search_result_types.proto";
import "cmp/types/v1/date.proto";
import "cmp/types/v2/company.proto";
import "cmp/types/v2/payment.proto";
import "cmp/types/v2/price.proto";
import "cmp/types/v3/file.proto";
import "cmp/types/v3/traveller.proto";

// ClaimForm
//
// ![Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/services/insurance/v1/claim_types.proto.dot.xs.svg)
//
// [Open Message Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/services/insurance/v1/claim_types.proto.dot.svg)
message ClaimForm {
  // Insured person or someone related who has the accident
  cmp.types.v3.TravellerExtraInfo affected_person = 1;

  // Policy brief info
  cmp.services.insurance.v1.PolicyInfo policy_info = 2;

  // Dates of services
  repeated cmp.types.v1.Date dates = 3;

  // Services to claim
  repeated cmp.services.insurance.v1.ClaimableService services_to_claim = 4;

  // Additional documents
  repeated cmp.services.insurance.v1.ClaimDocument additional_documents = 5;

  // Additional info
  repeated cmp.services.insurance.v1.ClaimAdditionalInfo additional_info = 6;
}

// Service to claim
message ClaimableService {
  // Service description
  string service_description = 1;

  // Amount to be claimed
  cmp.types.v2.Price charge_amount = 2;

  // Documents
  repeated cmp.services.insurance.v1.ClaimDocument documents = 3;
}

// Claim Document
message ClaimDocument {
  // File
  cmp.types.v3.File file = 1;

  // Type of the document
  cmp.services.insurance.v1.ClaimDocumentType type = 2;
}

// Additonal info
message ClaimAdditionalInfo {
  // Info string. More information regarding the claim/accident to be added here
  string info = 1;

  // Condition related to the claim
  cmp.services.insurance.v1.ClaimCondition condition = 2;
}

// Claim conditions
// TODO: is this list enough ?
enum ClaimCondition {
  CLAIM_CONDITION_UNSPECIFIED = 0;
  CLAIM_CONDITION_OTHER = 1;
  CLAIM_CONDITION_EMPLOYMENT = 2;
  CLAIM_CONDITION_TRIP_DELAY = 3;
  CLAIM_CONDITION_TRIP_CANCELLED = 4;
  CLAIM_CONDITION_FAMILY = 5;
  CLAIM_CONDITION_DEATH = 6;
  CLAIM_CONDITION_CAR_ACCIDENT = 7;
}

// Claim document types
// TODO: check if there are more types
enum ClaimDocumentType {
  CLAIM_DOCUMENT_TYPE_UNSPECIFIED = 0;
  CLAIM_DOCUMENT_TYPE_OTHER = 1;
  CLAIM_DOCUMENT_TYPE_BILL = 2;
  CLAIM_DOCUMENT_TYPE_POLICE_REPORT = 3;
  CLAIM_DOCUMENT_TYPE_MEDICAL_REPORT = 4;
  CLAIM_DOCUMENT_TYPE_LAB_RESULT = 5;
}

// Claim Status
// TODO: check if this list is sufficient
enum ClaimStatus {
  CLAIM_STATUS_UNSPECIFIED = 0;
  CLAIM_STATUS_RECEIVED = 1;
  CLAIM_STATUS_PROCESSING = 2;
  CLAIM_STATUS_APPROVED = 3;
  CLAIM_STATUS_REJECTED = 4;
  CLAIM_STATUS_INVESTIGATING = 5;
  CLAIM_STATUS_MORE_INFO_REQUIRED = 6;
  CLAIM_STATUS_FEEDBACK = 7;
  CLAIM_STATUS_REVIEW = 8;
  CLAIM_STATUS_PAIDOUT = 9;
  CLAIM_STATUS_DONE = 10;
}

// Claim Message Status
// TODO: check if this list is sufficient
enum ClaimMessageStatus {
  CLAIM_MESSAGE_STATUS_UNSPECIFIED = 0;
  CLAIM_MESSAGE_STATUS_ERROR = 1;
  CLAIM_MESSAGE_STATUS_RECEIVED = 2;
  CLAIM_MESSAGE_STATUS_UNKNOWN_CARRIER_ID = 3;
  CLAIM_MESSAGE_STATUS_UNKNOWN_PROCESSING_ID = 4;
  CLAIM_MESSAGE_STATUS_UNKNOWN_SUBMISSION_ID = 5;
}

// Brief info about insurance policy
message PolicyInfo {
  // Insured person
  cmp.types.v3.TravellerExtraInfo insured_person = 1;

  // Token ID of the policy booking
  uint64 policy_token_id = 2;

  // Chain ID , where the policy token was issued
  int32 chain_id = 3;

  // TODO: how do they define currency for pay out and which chain to use ?
  // Payment method: wallet address or the IBAN of the claim issuer for pay-out
  oneof payment_method {
    // Wallet address for on-chain payment
    string wallet_address = 4;

    // IBAN for off-chain payment
    string iban = 5;
  }

  // Insurance Company
  cmp.types.v2.Company company = 6;

  // Policy Codes: unit Code, service code and product code
  cmp.services.insurance.v1.PolicyCodes policy_code = 8;
}

// Claim more info requested
message ClaimInfoRequested {
  // Service description
  string service_description = 1;

  // Claim service amount
  cmp.types.v2.Price charge_amount = 2;

  // Document type requested
  cmp.services.insurance.v1.ClaimDocumentType document_type = 3;
}

message ClaimId {
  // Submission ID from the TO or OTA to trace this claim
  string submission_id = 1;

  // Processing ID from insurance supplier
  string processing_id = 2;

  // Carrier ID from insurance carrier
  string carrier_id = 3;
}

message ClaimMessageResponse {
  // Claim IDs: Submission ID, Processing ID and Carrier ID
  cmp.services.insurance.v1.ClaimId claim_id = 1;

  // Claim Message Status
  cmp.services.insurance.v1.ClaimMessageStatus message_status = 2;
}

// Claim Pay-Out Transaction
message PayOutTransaction {
  // Transaction ID
  string transaction_id = 1;

  // Transaction Type. It can be Bank transfer, Crypto transfer, Credit card, ... etc
  cmp.types.v2.PaymentType transaction_type = 2;
}
