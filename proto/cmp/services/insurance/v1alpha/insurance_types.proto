syntax = "proto3";

package cmp.services.insurance.v1alpha;

import "cmp/types/v1/contact_info.proto";
import "cmp/types/v1/file.proto";
import "cmp/types/v1/link.proto";
import "cmp/types/v1/price.proto";
import "cmp/types/v2alpha/product_code.proto";
import "google/protobuf/timestamp.proto";

// This represents Insurance types which is needed for different insurance services (search, info, ... etc)
//
// ![Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/services/insurance/v1alpha/insurance_types.proto.dot.xs.svg)
// [Open Message Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/services/insurance/v1alpha/insurance_types.proto.dot.svg)
message Insurance {
  // Context for Inventory system concepts that need to be included in an info
  // response, like an OwnerCode, PTC_OfferParameters, Tax codes, Disclosure RefID,
  // etc. or a serialized combination of these codes.
  string context = 1;

  // An identifier for external sessions, aiding in tracking and continuity across
  // sessions.
  string external_session_id = 2;

  // List of insurance policies
  repeated InsurancePolicy policies = 3;
}

message InsurancePolicy {
  // Product Code
  cmp.types.v2alpha.ProductCode product_code = 1;

  // Description
  string description = 2;

  // Ex: "2023-08-28T12:03:50", specifying when the static data of a product was
  // last updated
  google.protobuf.Timestamp last_modified = 3;
}

message PolicyExtendedInfo {
  // Policy with minimum info
  InsurancePolicy policy = 1;

  // Carrier code, not this provider is the holder of the policy and not a supplier to the Camino Network
  string carrier_code = 2;

  // Carrier name
  string carrier_name = 3;

  // url to logo
  cmp.types.v1.Image logo = 4;

  // enum of possible types, to be used for filtering
  PolicyType policy_type = 5;

  // Support contact
  cmp.types.v1.ContactInfo support_contact = 6;

  // Criteria
  repeated PolicyCriteria criteria = 7;

  // Units
  repeated PolicyUnit units = 8;

  // Services
  repeated PolicyService services = 9;
}

message PolicyCriteria {
  // Criteria Code
  string code = 1;

  // Criteria Name
  string name = 2;
}

message PolicyUnit {
  // Unit code
  string code = 1;

  // Unit name
  string name = 2;

  // Coverage details
  PolicyCoverage policy_coverage = 4;
}

message PolicyService {
  // Service Code
  string code = 1;

  // Service name
  string name = 2;

  // Codes of units
  repeated string units_codes = 3;

  // Coverage details
  PolicyCoverage policy_coverage = 4;
}

enum PolicyType {
  POLICY_TYPE_UNSPECIFIED = 0;
  POLICY_TYPE_OTHER = 1;
  POLICY_TYPE_CANCEL = 2;
  POLICY_TYPE_TRAVEL = 3;
  POLICY_TYPE_TRAVEL_MEDICAL = 4;
  POLICY_TYPE_MEDICAL = 5;
  POLICY_TYPE_EMERGENCY = 6;
  POLICY_TYPE_RENTAL_CAR = 7;
  POLICY_TYPE_PERSONAL_BELONGINGS = 8;
  POLICY_TYPE_FLIGHT = 9;
  POLICY_TYPE_DEATH = 10;
}

message PolicyCoverage {
  // Maximum coverage amount
  cmp.types.v1.Price max_coverage_amount = 3;

  // url to Detailed list of risks covered
  cmp.types.v1.Link coverage_link = 4;

  // url to Specific events or conditions that are not covered by the policy
  cmp.types.v1.Link exclusions_link = 5;

  // pre-existing conditions coverage
  bool preconditions_coverage = 6;

  // url to Details on whether pre-existing medical conditions are covered, and if so, under what terms.
  cmp.types.v1.Link preconditions_coverage_link = 7;

  // url to Full legal terms of the policy, privacy policy. compliance,..
  cmp.types.v1.Link terms = 8;

  // url to Frequently asked questions about the policy page
  cmp.types.v1.Link faq = 9;
}
