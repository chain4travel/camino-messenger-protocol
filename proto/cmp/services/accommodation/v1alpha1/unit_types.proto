syntax = "proto3";

package cmp.services.accommodation.v1alpha1;

import "cmp/types/v1alpha1/bed.proto";
import "cmp/types/v1alpha1/cancel_policy.proto";
import "cmp/types/v1alpha1/meal_plan.proto";
import "cmp/types/v1alpha1/price.proto";
import "cmp/types/v1alpha1/product_code.proto";
import "cmp/types/v1alpha1/rate.proto";
import "cmp/types/v1alpha1/service_fact.proto";
import "cmp/types/v1alpha1/travel_period.proto";
import "cmp/types/v1alpha1/traveller.proto";

// A Unit can represent a room in a hotel. One search option can have multiple units
// for multi-room requests Ex: one request for 2 rooms for 4 adults, 2 in each room.
//
// A unit can also be a different property in a multi-property request for holiday
// homes. Ex: 1 house for 4 persons and another house for 6 persons.
//
// ![Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/services/accommodation/v1alpha1/unit_types.proto.dot.xs.svg)
// [Open Message Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/services/accommodation/v1alpha1/unit_types.proto.dot.svg)
message Unit {
  // Unit Type. Used to distinguish between hotel rooms and holiday homes.
  // Ex: `UnitType.UNIT_TYPE_ROOM`
  UnitType type = 1;

  // Unit code. Room code of the unit in case of hotel. Ex: "RMSDDB0000"
  string unit_code = 2;

  // Unit name. In case of enrichment additional name of the unit code.
  // Ex: "Double Standard Room"
  string unit_name = 3;

  // Travel period
  cmp.types.v1alpha1.TravelPeriod travel_period = 4;

  // Travellers
  repeated cmp.types.v1alpha1.Traveller travellers = 5;

  // Beds
  repeated cmp.types.v1alpha1.Bed beds = 6;

  // Price in detail with breakdowns etc
  cmp.types.v1alpha1.PriceDetail price_detail = 7;

  // Services
  repeated cmp.types.v1alpha1.ServiceFact included_services = 8;
  repeated cmp.types.v1alpha1.ServiceFact compulsory_extras = 9;
  repeated cmp.types.v1alpha1.ServiceFact optional_extras = 10;

  // Mealplan code
  cmp.types.v1alpha1.MealPlan meal_plan_code = 11;

  // Rate plan
  cmp.types.v1alpha1.RatePlan rate_plan = 12;

  // Rate Rule
  cmp.types.v1alpha1.RateRule rate_rule = 13;

  // This is a list so that various policies can be expressed.
  //
  // Ex: 10-5 days before arrival x€, 4-1 days before arrival y€ and 0 days before
  // arrival z€
  repeated cmp.types.v1alpha1.CancelPolicy cancel_policies = 14;

  // Remaining units
  int32 remaining_units = 15;

  // Property code
  cmp.types.v1alpha1.ProductCode property_code = 16;

  // Remarks
  // FIXME: Is this field "per Unit" or should it be "per search request"?
  string remarks = 17;
}

enum UnitType {
  UNIT_TYPE_UNSPECIFIED = 0;
  UNIT_TYPE_ROOM = 1;
  UNIT_TYPE_HOLIDAY_HOME = 2;
}
