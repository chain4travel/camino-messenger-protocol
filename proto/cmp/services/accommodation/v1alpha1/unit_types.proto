syntax = "proto3";

package cmp.services.accommodation.v1alpha1;

import "cmp/types/v1alpha1/cancel_policy.proto";
import "cmp/types/v1alpha1/filter.proto";
import "cmp/types/v1alpha1/location.proto";
import "cmp/types/v1alpha1/mealplan.proto";
import "cmp/types/v1alpha1/price.proto";
import "cmp/types/v1alpha1/rate.proto";
import "cmp/types/v1alpha1/service_fact.proto";
import "cmp/types/v1alpha1/travel_period.proto";
import "cmp/types/v1alpha1/traveller.proto";

// ### Unit
//
// A Unit can represent a room in a hotel. One search option can have multiple units for
// multi-room requests Ex: one request for 2 rooms for 4 adults, 2 in each room.
// A unit can also be a different property in a multi-property request for holiday homes.
// Ex: 1 house for 4 persons and another house for 6 persons.
message Unit {
  // Unit Type
  // Ex: `UnitType.UNIT_TYPE_ROOM`
  UnitType type = 1;

  // Travel period
  cmp.types.v1alpha1.TravelPeriod travel_period = 2;

  // Travellers
  repeated cmp.types.v1alpha1.Traveller travellers = 3;

  // Beds
  repeated Bed beds = 4;

  // Geo Location for search, set only one of the fields at once.
  //
  // This one of field enforces only one of the fields below. They all share memory,
  // setting one will remove the others.
  oneof geo_location {
    // FIXME: Do we need a list of location code here? Other fields are not lists.
    cmp.types.v1alpha1.LocationCodes location_codes = 5;

    // Single geographic point represented by two double fields.
    cmp.types.v1alpha1.Coordinate location_coordinate = 6;

    // Geo tree type, representted by Country, Region, and City_or_Resort.
    cmp.types.v1alpha1.GeoTree location_geo_tree = 7;

    // Geo circle. Represented by a coordinate and a distance for radius
    cmp.types.v1alpha1.GeoCircle location_geo_circle = 8;

    // Geo polygon. Represented by a list of coordinate points.
    cmp.types.v1alpha1.GeoPolygon location_geo_polygon = 9;
  }

  // Price in detail with breakdowns etc
  cmp.types.v1alpha1.PriceDetail price_detail = 10;

  // Services
  repeated cmp.types.v1alpha1.ServiceFact included_services = 11;
  repeated cmp.types.v1alpha1.ServiceFact compulsory_extras = 12;
  repeated cmp.types.v1alpha1.ServiceFact optional_extras = 13;

  // Unit code. Room code of the unit in case of hotel. Ex: "RMSDDB0000"
  string unit_code = 14;

  // Unit description. In case of enrichment additional description of the unit code.
  // Ex: "Double Standard Room"
  string unit_description = 15;

  // Mealplan code.
  cmp.types.v1alpha1.MealPlan meal_plan_code = 16;

  // Rate plan
  cmp.types.v1alpha1.RatePlan rate_plan = 17;

  // Rate Rules
  repeated cmp.types.v1alpha1.RateRule rate_rules = 18;

  // Various provider and product specific filters can be provided here in
  // agreed name/value pairs
  // FIXME: Should this be in SearchParameters instead of Unit or in both? Do we
  // need per Unit filters? (We have this also in `SearchParameters` now)
  repeated cmp.types.v1alpha1.Filter filters = 19;

  // Cancel Policies
  // FIXME: Should this be a list? Initial json definition had a single element.
  repeated cmp.types.v1alpha1.CancelPolicy cancel_policies = 20;

  // Free-text field to provide more detials for better offer personalization.
  // This field can be provided in combination with a Geo location or as stand-alone.
  string request_description_text = 21;

  // The speech request is provided as a link to a recording to process for
  // better offer personalization. This field can be provided in combination
  // with a Geo location or as stand-alone.
  string request_description_audio_url = 22;

  // Remaining units
  int32 remaining_units = 23;

  // Remarks
  // FIXME: Is this field "per Unit" or should it be "per search request"?
  string remarks = 24;
}

message Bed {
  BedType type = 1;
  int32 count = 2;
}

enum BedType {
  BED_TYPE_UNSPECIFIED = 0;
  BED_TYPE_SINGLE = 1;
  BED_TYPE_DOUBLE = 2;
  BED_TYPE_KING = 3;
}

enum UnitType {
  UNIT_TYPE_UNSPECIFIED = 0;
  UNIT_TYPE_ROOM = 1;
  UNIT_TYPE_HOLIDAY_HOME = 2;
}
