syntax = "proto3";

package cmp.services.accommodation.v1alpha1;

import "cmp/services/accommodation/v1alpha1/search_option_types.proto";
import "cmp/services/accommodation/v1alpha1/unit_types.proto";
import "cmp/types/v1alpha1/common.proto";
import "cmp/types/v1alpha1/country.proto";
import "cmp/types/v1alpha1/currency.proto";
import "cmp/types/v1alpha1/enrichment.proto";
import "cmp/types/v1alpha1/language.proto";

/*
   ### AccommodationSearchRequest Message Type

   ![AccommodationSearchRequestDiagram](http://localhost:3000/img/holiday_home.proto.dot.svg)

   The `AccommodationSearchRequest` message type facilitates the request for holiday
   home searches within the platform. This message type is derived from the `AccommodationSearchRequest` where the hotel specific concepts
   like room and mealplan have been removed and Accommodation specific concepts like deposit, extra laundry change, etc have been incorporated

   Developers leveraging this message type should ensure proper validation and
   handling, especially considering fields that are still under review, like
   `speech_request`.
*/
message AccommodationSearchRequest {
  // Message Header. Contains api version, message info string and end user wallet address
  cmp.types.v1alpha1.Header header = 1;

  // An identifier for external sessions, aiding in tracking and continuity across sessions.
  string external_session_id = 2;

  // Enables additional contextual information to be added to the search response.
  // Possible values are none, full and thumbnail. If not set, the assumed default value is none.
  cmp.types.v1alpha1.Enrichment enrichment = 3;

  // Requested currency according to ISO 4217 Currency codes
  cmp.types.v1alpha1.Currency currency = 4;

  // Requested language according to ISO 639-1 Language codes
  cmp.types.v1alpha1.Language language = 5;

  // Request generated for a specific market according to ISO 3166-1 Country codes
  cmp.types.v1alpha1.Country country = 6;

  // Option flags
  OptionFlags flags = 7;

  // Units
  repeated Unit units = 9;
}

// Accommodation Search Response
message AccommodationSearchResponse {
  // Message Header. Contains api version, message info string and end user wallet address
  cmp.types.v1alpha1.Header header = 1;

  string context = 2;
  string errors = 3;
  string warnings = 4;
  string supplier_code = 5;
  string external_session_id = 6;
  string search_id = 7;
  repeated SearchOption options = 8;
}

// The Accommodation Service definition
service AccommodationSearchService {
  // Accommodation Search method
  rpc AccommodationSearch(AccommodationSearchRequest) returns (AccommodationSearchResponse);
}
