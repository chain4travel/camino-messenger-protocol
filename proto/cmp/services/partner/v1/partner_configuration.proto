syntax = "proto3";

package cmp.services.partner.v1;

import "cmp/types/v1/partner.proto";

// Partner Configuration message type
//
// This message type represents the partner configuration on T-Chain (not
// implemented yet)
message PartnerConfiguration {
  // List of partners from the on-chain Partner Configuration
  repeated cmp.types.v1.Partner partners = 1;
}

message GetPartnerConfigurationRequest {
  // Only respond with updated partners after this block height.
  int32 block_height = 2;

  // Partner wallet addresses. Response is returned with only partners that have
  // these addresses.
  repeated string partner_addresses = 3;
}

message GetPartnerConfigurationResponse {
  // Partner configuration
  PartnerConfiguration partner_configuration = 1;

  // Current block height. Distributors can keep this info for later reference.
  int32 current_block_height = 2;
}

// Get Partner Configuration Service
//
// ![Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/services/partner/v1/partner_configuration.proto.dot.xs.svg)
// [Open Message Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/services/partner/v1/partner_configuration.proto.dot.svg)
service GetPartnerConfigurationService {
  // #### GetPartnerConfiguration
  //
  // Takes `GetPartnerConfigurationRequest` which contains optional block height and
  // partner wallet addresses and returns `GetPartnerConfigurationResponse` which
  // contains the current block height and the`PartnerConfiguration` for the given
  // addresses (if any, returns all if none is provided) and only if the data is
  // changed after the provided block height.
  rpc GetPartnerConfiguration(GetPartnerConfigurationRequest) returns (GetPartnerConfigurationResponse);
}
