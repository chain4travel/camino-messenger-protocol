syntax = "proto3";

package cmp.services.partner.v1alpha1;

import "cmp/types/v1alpha1/partner.proto";

message PartnerConfiguration {
  // List of partners from the on-chain Partner Configuration
  repeated cmp.types.v1alpha1.Partner partners = 1;
}

message GetPartnerConfigurationRequest {
  // Only respond with updated partners after this block height
  int32 block_height = 2;

  // Partner wallet addresses
  // Response is returned with only partners that have these addresses
  repeated string partner_addresses = 3;
}

message GetPartnerConfigurationResponse {
  // Partner configuration
  PartnerConfiguration partner_configuration = 1;

  // Current block height
  // Distributors can keep this info for later reference
  int32 current_block_height = 2;
}

service GetPartnerConfigurationService {
  // Get Partner Configuration Service
  //
  // Takes optional block height and partner wallet addresses and returns
  // PartnerConfiguration for the given addresses (if any, returns all if none
  // is provided) and only if the data is changed after the provided config.
  rpc GetPartnerConfiguration(GetPartnerConfigurationRequest) returns (GetPartnerConfigurationResponse);
}
