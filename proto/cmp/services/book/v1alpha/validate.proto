syntax = "proto3";

package cmp.services.book.v1alpha;

import "cmp/types/v1alpha/common.proto";
import "cmp/types/v1alpha/price.proto";
import "cmp/types/v1alpha/seat_map.proto";

message ValidationRequest {
  // Message header
  cmp.types.v1alpha.RequestHeader header = 1;

  // Search ID that is returned in the search response message in the `metadata``
  // (`SearchResponseMetadata`) field.
  string search_id = 2;

  // Result ID that is that is returned by `result_id` field of the search result
  // messages, for example: `AccommodationSearchResult`.
  int32 result_id = 3;

  // Unit identifier that is used to describe selected units from the `result_id`.
  // For example: seats for a concert.
  oneof unit_identifier {
    // Selected seat(s) represented as a seat map inventory message type.
    cmp.types.v1alpha.SeatMapInventory seat_selection = 4;
  }
}

message ValidationResponse {
  // Message header
  cmp.types.v1alpha.ResponseHeader header = 1;

  // Unique validation ID. This must be a UUID according to RFC 4122
  string validation_id = 2;

  // Validation object
  ValidationObject validation_object = 3;
}

// Validation message that represents a single `result_id` from the search results
// message.
//
// TODO: Better name?
// TODO: Do we also need `search_id` here?
// TODO: Do we also need `unit_identifier` here?
message ValidationObject {
  int32 result_id = 1;
  cmp.types.v1alpha.PriceDetail price_detail = 2;
}

// ![Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/services/book/v1alpha/validate.proto.dot.xs.svg)
// [Open Message Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/services/book/v1alpha/validate.proto.dot.svg)
service ValidationService {
  rpc Validation(ValidationRequest) returns (ValidationResponse);
}
