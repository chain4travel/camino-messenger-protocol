syntax = "proto3";

package cmp.services.transport.v3;

import "cmp/services/transport/v3/trip_types.proto";
import "cmp/types/v1/bookability.proto";
import "cmp/types/v1/datetime_range.proto";
import "cmp/types/v1/link.proto";
import "cmp/types/v1/rate.proto";
import "cmp/types/v2/cancel_policy.proto";
import "cmp/types/v2/change_policy.proto";
import "cmp/types/v2/price.proto";

// Transport search result
//
// ![Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/services/transport/v3/search_result_types.proto.dot.xs.svg)
//
// [Open Message Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/services/transport/v3/search_result_types.proto.dot.svg)
message TransportSearchResult {
  // Unique result ID
  int32 result_id = 1;

  // Query ID is the id of the query this result is generated for
  int32 query_id = 2;

  // Offer ID.
  //
  // Option to carry through an offer identifier for other stateful provider systems
  // like NDC AirShopping RS
  string offer_id = 3;

  // Travellers
  repeated int32 traveller_ids = 4;

  // Travelling trip. A travelling trip can be repeated and will be in many cases 2
  // trips: an outbound and returning trip from and to the same destination.
  // However, it is very much possible to specify your trip around the world into
  // several "Trips". For example AMS-NYC and after a couple of days NYC-IAH. There
  // we rent a car and do a road trip to San Fransisco and we take a flight from SFO
  // to SYD, where afer a couple of days we move on to Indonesia, Thailand, Japan,
  // TÃ¼rkiye and back to Amsterdam again.
  repeated cmp.services.transport.v3.TripExtended travelling_trips = 5;

  // Total Price
  cmp.types.v2.PriceDetail total_price = 6;

  // Rate Rules
  repeated cmp.types.v1.RateRule rate_rules = 7;

  // Links
  repeated cmp.types.v1.Link links = 8;

  // Status of the result, whether it is immediately bookable or not
  cmp.types.v1.Bookability bookability = 9;

  // Validity of the search option.
  //
  // `DateTimeRange` type with `start_date` and `end_date` in which the option can
  // be booked. If the start_date is omitted, the offer can be booked until the
  // end-date.
  cmp.types.v1.DateTimeRange validity = 10;

  // Cancel Policy
  cmp.types.v2.CancelPolicy cancel_policy = 11;

  // Change Policy
  cmp.types.v2.ChangePolicy change_policy = 12;

  // Observations
  string observations = 13;
}
