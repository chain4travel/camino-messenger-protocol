syntax = "proto3";

package cmp.types.v1alpha;

import "cmp/types/v1alpha/currency.proto";

// ### PriceDetail
//
// This message consists of the value as a Price object and additional fields as
// binding, concept, and breakdown.
//
// Breakdown is a recursively inhereted object of PriceDetail. This way complex
// pricing structures can be represented.
//
// ![Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/types/v1alpha/price.proto.dot.xs.svg)
// [Open Message Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/types/v1alpha/price.proto.dot.svg)
message PriceDetail {
  // Principle price element
  Price price = 1;

  // Identification whether the price must be respected towards the end-user
  // and the product or service cannot be offered for a lower price.
  bool binding = 2;

  // Description of the product or service this price(element) is valid for.
  string description = 3;

  // If not specified, the default of the boolean is false which means it is
  // included in the price. If set to True, it means that this PriceDetail is only
  // payable locally. For example local tourism tax that you pay at the reception of
  // a hotel. Intended to be used in the breakdown.
  bool locally_payable = 4;

  // Type of price
  string type = 5;

  // Type code of the price
  string type_code = 6;

  // We can use a single PriceDetail to represent a price breakdown.
  repeated PriceDetail breakdown = 7;
}

// Price message representing a price without details like breakdown, description etc.
message Price {
  // Value of the price, this should be an integer converted to string.
  //
  // This field is a string intentionally. Because the currency can be a crypto
  // currency, we need a reliable way to represent big integers as most of the
  // crypto currencies have 18 decimals precision.
  //
  // Example: value=10457 decimals=2 currency=USD --> 104.57 USD
  //
  // Example: value=10457485 decimals=5 currency=native --> 104.57485 CAM
  //
  // Example: value=10457 decimals=5 currency=native --> 0.10457 CAM
  string value = 1;
  int32 decimals = 2;
  Currency currency = 3;
}
