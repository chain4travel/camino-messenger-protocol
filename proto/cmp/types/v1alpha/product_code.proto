syntax = "proto3";

package cmp.types.v1alpha;

// Product code and type
//
// This is being used in requests to specify the a list of products to be included in the reponse
//
// ![Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/types/v1alpha/product_code.proto.dot.xs.svg)
// [Open Message Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/types/v1alpha/product_code.proto.dot.svg)
message ProductCode {
  // In most cases like in accommodation, just the field "code" and "type" will be
  // used. For example in case of a GiataID (for example code=182568), a provider
  // hotel code (for example a hotel code=AESPMI1234), a transfer code, etc.
  // However, for flight and train it is common to have a code and a number like "EW
  // 51" or "ICE 2803", which would then be code=EW and number=51 or code=ICE and
  // number=2803. It is not recommended to concatenate for example the airline code
  // and the flight number into the code field as "EW 51", as this would cause different
  // implementations for providers of the same product.
  //
  // Please note that when utilizing licensed codes or formats such as GiataID and DRV
  // GlobalTypes, it is the partners' responsibility to confirm and settle any associated
  // license fees directly with the respective organizations
  string code = 1;
  int32 number = 2;
  ProductCodeType type = 3;
}

// Product Code type
enum ProductCodeType {
  PRODUCT_CODE_TYPE_UNSPECIFIED = 0;
  PRODUCT_CODE_TYPE_GIATA = 1;
  PRODUCT_CODE_TYPE_GOAL_ID = 2;
  PRODUCT_CODE_TYPE_IATA = 3;
  PRODUCT_CODE_TYPE_ICAO = 4;
}

message SupplierProductCode {
  // The supplier product code is unique for a product provided by the supplier and it
  // must remain consistent across the different messages like the ProductList, ProductInfo
  // and Search messages. Mapping is done on static data, however making a search request
  // with a GiataID or an ICAO code, could return one or more search results with each
  // individual supplier codes in case the code type is not unique and the supplier has
  // multiple products for the requested code. An example could be making a request for an
  // accommodation with a GiataID and the supplier can offer a product with just the hotel,
  // the hotel with a ski pass or the hotel with a rent a car. For packages we can imagine
  // an accommodation, the accommodation with a flight and transfer or the accommodation with
  // a flight and a rent a car. As the product descriptions from the supplier will have
  // different services, it is safe to assume the product codes will be differnt, the product
  // name will be different and the descriptions and amenities as well in the ProductList and
  // ProductInfo messages.
  string supplier_code = 1;
  int32 supplier_number = 2;
}
