syntax = "proto3";

package cmp.types.v1alpha;

import "cmp/types/v1alpha/content_source.proto";
import "cmp/types/v1alpha/country.proto";
import "cmp/types/v1alpha/currency.proto";
import "cmp/types/v1alpha/filter.proto";
import "cmp/types/v1alpha/language.proto";
import "cmp/types/v1alpha/sorting.proto";
import "cmp/types/v1alpha/uuid.proto";
import "cmp/types/v1alpha/product_code.proto";

// Search parameters for the search requests
//
// ![Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/types/v1alpha/search.proto.dot.xs.svg)
// [Open Message Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/types/v1alpha/search.proto.dot.svg)
message SearchParameters {
  // Requested currency in which prices have to be supplied in the response
  // according to ISO 4217 Currency codes
  Currency currency = 1;

  // Requested language setting for descriptions in the response according to ISO
  // 639-1 Language codes
  Language language = 2;

  // Request generated for a specific market according to ISO 3166-1 Country codes
  Country market = 3;

  // Request generated for a specific brand or point-of-sale by one distributor
  // Specify one or more brand codes or distribution channels for which assigned
  // product is to be included in the search response
  repeated string brand_code = 4;

  // Include OnRequest options in the response or only immediately bookable options
  bool include_on_request = 5;

  // Only show the cheapest option for one product, or include all possible
  // combinations
  bool include_combinations = 6;

  // Limit the maximum number of options included in the response
  int32 max_options = 7;

  // Specify the sorting required in the response
  Sorting sorting = 8;

  // Filters for the search. Various provider and product specific filters can be
  // provided here in agreed name/value pairs.
  repeated Filter filters = 9;

  // Free-text field to provide more detials for better offer personalization. This
  // field can be provided in combination with a Geo location or as stand-alone.
  string search_description_text = 10;

  // The speech is provided as a link to a recording to process for better offer
  // personalization. This field can be provided in combination with a Geo location
  // or as stand-alone.
  string search_description_audio_url = 11;

  // Content source types for this search request to specify which sources to
  // include.
  //
  // Ex: ContentSourceType.CONTENT_SOURCE_TYPE_GDS,
  // ContentSourceType.CONTENT_SOURCE_TYPE_NDC
  // ContentSourceType.CONTENT_SOURCE_TYPE_3RD_PARTY
  repeated ContentSourceType content_source_types = 12;
}

// This message type is used in every search request to contain the request metadata
message SearchRequestMetadata {
  // Request unique identifier
  UUID request_id = 1;

  // An identifier for external sessions, aiding in tracking and continuity across
  // sessions.
  string external_session_id = 2;
}

// This message type is used in every search response to contain the response metadata
message SearchResponseMetadata {
  // Search_id to be used in the Validation Request. This must be a UUID according
  // to RFC 4122
  UUID search_id = 1;

  // Context for Inventory system communication.
  string context = 2;

  // Errors encountered in the generation of the response. Standardized error list
  // to be created.
  string errors = 3;

  // Warnings encountered in the generation of the response.
  string warnings = 4;

  // Supplier code from the Inventory System for this search response.
  string supplier_code = 5;

  // An identifier for external sessions, aiding in tracking and continuity across
  // sessions.
  string external_session_id = 6;
}
