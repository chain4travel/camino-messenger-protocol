syntax = "proto3";

package cmp.types.v2alpha;

// Meal Plan message type
//
// ![Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/types/v2alpha/meal_plan.proto.dot.xs.svg)
// [Open Message Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/types/v2alpha/meal_plan.proto.dot.svg)
message MealPlan {
  // Meal Plan Code
  //
  // Ex: `MealPlan.MEAL_PLAN_AI` for "All Inclusive" meal plan.
  MealPlanCode code = 1;

  // Mealplan description. In case of enrichment additional description of the unit code.
  //
  // Ex: "All Inclusive"
  string description = 2;
}

// Meal plan code ENUM type
enum MealPlanCode {
  MEAL_PLAN_CODE_UNSPECIFIED = 0; // No Mealplan specified
  MEAL_PLAN_CODE_AI = 1; // All Inclusive
  MEAL_PLAN_CODE_AI_PLUS = 2; // All Inclusive + additional services
  MEAL_PLAN_CODE_AI_MINUS = 3; // All Inclusive Light
  MEAL_PLAN_CODE_AIU = 4; // Ultra All Inclusive
  MEAL_PLAN_CODE_BB = 5; // Bed & Breakfast
  MEAL_PLAN_CODE_DO = 6; // Dinner Only
  MEAL_PLAN_CODE_FB = 7; // Full Board
  MEAL_PLAN_CODE_FB_PLUS = 8; // Full Board + additional services
  MEAL_PLAN_CODE_HB = 9; // Half Board
  MEAL_PLAN_CODE_HB_PLUS = 10; // Half Board + additional services
  MEAL_PLAN_CODE_LO = 11; // Lunch Only
  MEAL_PLAN_CODE_RO = 12; // Room Only
  MEAL_PLAN_CODE_DB = 13; // Dinner Buffet
  MEAL_PLAN_CODE_SC = 14; // Self Catering
  MEAL_PLAN_CODE_AP = 15; // Acording to Programme*
}
